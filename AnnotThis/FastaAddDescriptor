#!/usr/bin/perl

=head1 NAME

 FastaAddDescriptor
 Script to add a descriptor line to a fasta sequence

=cut

=head1 SYPNOSIS

 FastaAddDescriptor [-h] -f <fasta> -d <descriptions> [-s <synonyms>]

=head2 I<Flags:>

=over

=item -f

B<fasta>                        fasta file (mandatory)

=item -d

B<descriptions>                 tab description file (-f1 ID, -f2 descriptions)

=item -s

B<synonyms>                     use a synonym file to link ID/descriptions

=item -h

B<help>                         print the help

=back

=cut

=head1 DESCRIPTION

 This script parse add a description line to a fasta file using an ID (default)
 or using a synonym file.

=cut

=head1 AUTHORS

  Aureliano Bombarely Gomez.
  (ab782@cornell.edu).

=cut

=head1 METHODS

 BlastAddDescriptor


=cut

use strict;
use warnings;
use autodie;

use File::Basename;
use Getopt::Std;
use Bio::SeqIO;

our ($opt_f, $opt_d, $opt_s, $opt_h);
getopts("f:d:s:h");

if (!$opt_f && !$opt_d && !$opt_s && !$opt_h) {
    print "There are n\'t any tags. Print help\n\n";
    help();
}

my $fasta = $opt_f ||
    die("\nERROR: No -f <fasta> was supplied.\n");
my $descr = $opt_d ||
    die("\nERROR: No -d <descriptions> was supplied.\n");

## 1) Parse the synonym file if it exists

print STDERR "\n1) Parsing the synonym file.\n";

my %synon = ();

if ($opt_s) {

    open my $sfh, '<', $opt_s;
    while(<$sfh>) {
    
	chomp($_);
	if ($_ =~ m/.+/) {
	    my @fields = split(/\t/, $_);
	    $synon{$fields[0]} = $fields[1];   
	}
    }

    my $nsym = scalar(keys %synon);
    print STDERR "\n\t$nsym synonyms have been parsed.\n";
}
else {

    print STDERR "\n\tNo synonym file (-s) was supplied. Skipping step.\n";
}

## 2) Parse the description file

print STDERR "\n2) Parsing the description file.\n";

my %desc = ();

open my $dfh, '<', $descr;
while(<$dfh>) {
    
    chomp($_);
    if ($_ =~ m/.+/) {
	my @fields = split(/\t/, $_);
	
	if (scalar(@fields) > 1) {

	    $desc{$fields[0]} = $fields[1];   
	}
    }
}

my $ndesc = scalar(keys %desc);
print STDERR "\n\t$ndesc descriptions have been parsed.\n";

## 3) Parse the fasta file and add descriptions.
## Output will be -f plus _descr.fa

print STDERR "\n3) Parsing the fasta file.\n";

my $inseqio = Bio::SeqIO->new( -file => "$fasta", -format => 'fasta');

my $outfasta = $fasta . '_descr.fa';
my $outseqio = Bio::SeqIO->new( -file => ">$outfasta", -format => 'fasta');

while( my $seqobj = $inseqio->next_seq() ) {

    my $id = $seqobj->id();
    my $desc = $seqobj->desc();
    my @multdesc = ($desc);

    if ($opt_s) {
    
	if (exists $synon{$id} && $synon{$id} =~ m/.+/) {
		    	    
	    if (exists $desc{$synon{$id}} && $desc{$synon{$id}} =~ m/.+/) {

		push @multdesc, $desc{$synon{$id}};
	    }	
	}
    }
    else {
    
	if (exists $desc{$id}) {
	    
	    push @multdesc, $desc{$id};
	}	
    }
    
    ## Finally it will join all the descriptions and add to the seq obj

    if (scalar(@multdesc) > 0) {
    
	$seqobj->desc(join(" ", @multdesc));
    }
    $outseqio->write_seq($seqobj);    
}

print STDERR "\nDone\n\n";

=head2 help

  Usage: help()
  Desc: print help of this script
  Ret: none
  Args: none
  Side_Effects: exit of the script
  Example: if (!@ARGV) {
               help();
           }

=cut

sub help {
  print STDERR <<EOF;
  $0:

    Description:
      
       This script parse add a description line to a fasta file using an 
       ID (default) or using a synonym file.

    Usage:
      
      FastaAddDescriptor [-h] -f <fasta> -d <descriptions> [-s <synonyms>]
      
    Flags:
      -f <fasta>            fasta file (mandatory)
      -d <descriptions>     tab description file (-f1 ID, -f2 descriptions)\
      -s <synonyms>         use a synonym file to link ID/descriptions
      -h   this help

EOF
exit (1);
}

